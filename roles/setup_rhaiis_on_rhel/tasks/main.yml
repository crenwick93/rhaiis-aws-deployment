---
# tasks/upgrade_rhel9.yml
- name: Set environment variable HF_TOKEN
  ansible.builtin.lineinfile:
    path: /etc/environment
    line: "HF_TOKEN={{ setup_rhaiis_on_rhel_hf_token }}"
    regexp: "^HF_TOKEN="
    state: present
  become: true

- name: Download NVIDIA repo setup script
  ansible.builtin.get_url:
    url: https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo
    dest: /etc/yum.repos.d/nvidia-container-toolkit.repo

- name: Clean yum cache
  ansible.builtin.command: yum clean all

- name: Install nvidia-container-toolkit
  ansible.builtin.yum:
    name: nvidia-container-toolkit
    state: present

- name: Ensure nvidia-ctk is available
  ansible.builtin.stat:
    path: /usr/bin/nvidia-ctk
  register: nvidia_ctk_stat

- name: Ensure the nvidia-ctk is executable
  ansible.builtin.file:
    path: /usr/bin/nvidia-ctk
    mode: '0755'
  when: nvidia_ctk_stat.stat.exists

- name: Ensure CDI directory exists
  ansible.builtin.file:
    path: /etc/cdi
    state: directory
    mode: '0755'
  become: true

- name: Generate nvidia CDI configuration
  ansible.builtin.command:
    cmd: nvidia-ctk cdi generate --output=/etc/cdi/nvidia.yaml
  become: true
  args:
    creates: /etc/cdi/nvidia.yaml

- name: Create vLLM cache directory
  ansible.builtin.file:
    path: "{{ setup_rhaiis_on_rhel_vllm_cache_dir }}"
    state: directory
    mode: '0777'
  become: false
  become_user: "{{ student_name | default('ec2-user') }}"

- name: Ensure chat-template directory exists
  ansible.builtin.file:
    path: /opt/rhaiis/chat_templates
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true

# - name: Download Llama-3.1 JSON tool-chat template
#   ansible.builtin.get_url:
#     url: https://raw.githubusercontent.com/vllm-project/vllm/main/examples/tool_chat_template_llama3.1_json.jinja
#     dest: /opt/rhaiis/chat_templates/tool_chat_template_llama3.1_json.jinja
#     owner: root
#     group: root
#     mode: '0444'
#     force: yes            # re-download if upstream file changes
#   become: true

- name: Set vm.overcommit_memory parameter
  when: setup_rhaiis_on_rhel_mem_overcommit is defined
  ansible.posix.sysctl:
    name: vm.overcommit_memory
    value: "{{ setup_rhaiis_on_rhel_mem_overcommit }}"
    state: present
    reload: true
  become: true

- name: Configure container registry authentication
  ansible.builtin.include_tasks: configure_registry_auth.yml
  when: setup_rhaiis_on_rhel_registry_auth_enabled | bool

- name: Ensure NVIDIA kernel modules are loaded and /dev/nvidia-uvm exists
  block:
    - name: Load NVIDIA kernel modules (idempotent)
      ansible.builtin.shell: |
        for m in nvidia nvidia_uvm nvidia_modeset; do
          if ! lsmod | grep -q "^$m"; then
            modprobe $m
          fi
        done
      become: true
      changed_when: false  # idempotent, only loads if missing

    - name: Ensure NVIDIA device nodes exist
      ansible.builtin.command: nvidia-modprobe -u -c=0
      become: true
      changed_when: false

    - name: Wait until /dev/nvidia-uvm exists
      ansible.builtin.wait_for:
        path: /dev/nvidia-uvm
        state: present
        timeout: 120
  when: ansible_facts['devices'] is defined

- name: Create vLLM systemd service
  ansible.builtin.include_tasks: create_systemd_service.yml
